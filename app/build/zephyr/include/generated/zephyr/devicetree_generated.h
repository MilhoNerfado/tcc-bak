/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/milho/Repos/zephyr/example-application/app/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/milho/Repos/zephyr/example-application/dts/bindings, /home/milho/Repos/zephyr/zephyr/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /soc
 *   5   /soc/interrupt-controller@e000e100
 *   6   /clocks
 *   7   /clocks/clk-hsi
 *   8   /clocks/pll
 *   9   /soc/rcc@40021000
 *   10  /soc/adc@40012400
 *   11  /dietemp
 *   12  /memory@20000000
 *   13  /soc/pin-controller@50000000
 *   14  /soc/pin-controller@50000000/gpio@50000000
 *   15  /soc/pin-controller@50000000/gpio@50000800
 *   16  /mutex0
 *   17  /soc/pin-controller@50000000/i2c1_scl_pa9
 *   18  /soc/pin-controller@50000000/i2c1_sda_pa10
 *   19  /soc/i2c@40005400
 *   20  /smbus1
 *   21  /soc/pin-controller@50000000/i2c2_scl_pa11
 *   22  /soc/pin-controller@50000000/i2c2_sda_pa12
 *   23  /soc/i2c@40005800
 *   24  /smbus2
 *   25  /vbat
 *   26  /vref
 *   27  /clocks/clk-hse
 *   28  /clocks/clk-lse
 *   29  /clocks/clk-lsi
 *   30  /cpus
 *   31  /cpus/power-states
 *   32  /cpus/power-states/state0
 *   33  /cpus/power-states/state1
 *   34  /cpus/cpu@0
 *   35  /leds
 *   36  /leds/led_3
 *   37  /soc/dma@40020000
 *   38  /soc/dmamux@40020800
 *   39  /soc/interrupt-controller@40021800
 *   40  /soc/pin-controller@50000000/usart2_rx_pa3
 *   41  /soc/pin-controller@50000000/usart2_tx_pa2
 *   42  /soc/rcc@40021000/reset-controller
 *   43  /soc/serial@40004400
 *   44  /soc/serial@40008000
 *   45  /soc/pin-controller@50000000/usart1_rx_pb7
 *   46  /soc/pin-controller@50000000/usart1_tx_pb6
 *   47  /soc/serial@40013800
 *   48  /soc/spi@40003800
 *   49  /soc/pin-controller@50000000/spi1_miso_pb4
 *   50  /soc/pin-controller@50000000/spi1_mosi_pb5
 *   51  /soc/pin-controller@50000000/spi1_sck_pb3
 *   52  /soc/spi@40013000
 *   53  /soc/timer@e000e010
 *   54  /soc/timers@40007c00
 *   55  /soc/watchdog@40002c00
 *   56  /soc/watchdog@40003000
 *   57  /soc/flash-controller@40022000
 *   58  /soc/flash-controller@40022000/flash@8000000
 *   59  /soc/pin-controller@50000000/gpio@50000400
 *   60  /soc/pin-controller@50000000/gpio@50000c00
 *   61  /soc/pin-controller@50000000/gpio@50001400
 *   62  /soc/rtc@40002800
 *   63  /soc/rtc@40002800/backup_regs
 *   64  /soc/timers@40000000
 *   65  /soc/timers@40000000/pwm
 *   66  /soc/timers@40000400
 *   67  /soc/timers@40000400/counter
 *   68  /soc/timers@40000400/pwm
 *   69  /soc/timers@40002000
 *   70  /soc/timers@40002000/counter
 *   71  /soc/timers@40002000/pwm
 *   72  /soc/timers@40012c00
 *   73  /soc/timers@40012c00/counter
 *   74  /soc/timers@40012c00/pwm
 *   75  /soc/timers@40014400
 *   76  /soc/timers@40014400/counter
 *   77  /soc/timers@40014400/pwm
 *   78  /soc/timers@40014800
 *   79  /soc/timers@40014800/counter
 *   80  /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 14
#define DT_N_CHILD_NUM_STATUS_OKAY 9
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_mutex0)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mutex0)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_mutex0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mutex0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_mutex0)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mutex0)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_mutex0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mutex0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /soc */ \
	6, /* /clocks */ \
	11, /* /dietemp */ \
	12, /* /memory@20000000 */ \
	16, /* /mutex0 */ \
	20, /* /smbus1 */ \
	24, /* /smbus2 */ \
	25, /* /vbat */ \
	26, /* /vref */ \
	30, /* /cpus */ \
	35, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32g031k8_nucleo DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_st_stm32g031k8_nucleo 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "stm32g031k8-nucleo"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32g031k8-nucleo"}
#define DT_N_P_compatible_IDX_0 "st,stm32g031k8-nucleo"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g031k8-nucleo
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_stm32g031k8_nucleo
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G031K8_NUCLEO
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-nano-header-r3):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/gpio/arduino-nano-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_connector_NODELABEL_NUM 1
#define DT_N_S_connector_FOREACH_NODELABEL(fn) fn(arduino_nano_header)
#define DT_N_S_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(arduino_nano_header, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_CHILD_NUM 0
#define DT_N_S_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_nano_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_nano_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_IRQ_LEVEL 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_nano_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_connector_P_compatible {"arduino-nano-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-nano-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-nano-header-r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_nano_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_NANO_HEADER_R3
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_zephyr_deferred_init 0
#define DT_N_S_connector_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 26
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 10
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40021800) fn(DT_N_S_soc_S_pin_controller_50000000) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40002000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_adc_40012400) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dmamux_40020800) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_timers_40000000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmamux_40020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012400, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dmamux_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmamux_40020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40021800) fn(DT_N_S_soc_S_pin_controller_50000000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40013000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/adc@40012400 */ \
	13, /* /soc/pin-controller@50000000 */ \
	19, /* /soc/i2c@40005400 */ \
	23, /* /soc/i2c@40005800 */ \
	37, /* /soc/dma@40020000 */ \
	38, /* /soc/dmamux@40020800 */ \
	39, /* /soc/interrupt-controller@40021800 */ \
	43, /* /soc/serial@40004400 */ \
	44, /* /soc/serial@40008000 */ \
	47, /* /soc/serial@40013800 */ \
	48, /* /soc/spi@40003800 */ \
	52, /* /soc/spi@40013000 */ \
	53, /* /soc/timer@e000e010 */ \
	54, /* /soc/timers@40007c00 */ \
	55, /* /soc/watchdog@40002c00 */ \
	56, /* /soc/watchdog@40003000 */ \
	57, /* /soc/flash-controller@40022000 */ \
	62, /* /soc/rtc@40002800 */ \
	64, /* /soc/timers@40000000 */ \
	66, /* /soc/timers@40000400 */ \
	69, /* /soc/timers@40002000 */ \
	72, /* /soc/timers@40012c00 */ \
	75, /* /soc/timers@40014400 */ \
	78, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_st_stm32g031 DT_N_S_soc
#define DT_N_INST_0_st_stm32g0   DT_N_S_soc
#define DT_N_INST_0_simple_bus   DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32g031 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "stm32g031"
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32g0 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "stm32g0"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"st,stm32g031", "st,stm32g0", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "st,stm32g031"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g031
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN st_stm32g031
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G031
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "st,stm32g0"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED st,stm32g0
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN st_stm32g0
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32G0
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 3
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v6m-nvic):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/interrupt-controller/arm,v6m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 5
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	10, /* /soc/adc@40012400 */ \
	19, /* /soc/i2c@40005400 */ \
	23, /* /soc/i2c@40005800 */ \
	37, /* /soc/dma@40020000 */ \
	38, /* /soc/dmamux@40020800 */ \
	39, /* /soc/interrupt-controller@40021800 */ \
	43, /* /soc/serial@40004400 */ \
	44, /* /soc/serial@40008000 */ \
	47, /* /soc/serial@40013800 */ \
	48, /* /soc/spi@40003800 */ \
	52, /* /soc/spi@40013000 */ \
	54, /* /soc/timers@40007c00 */ \
	55, /* /soc/watchdog@40002c00 */ \
	57, /* /soc/flash-controller@40022000 */ \
	62, /* /soc/rtc@40002800 */ \
	64, /* /soc/timers@40000000 */ \
	66, /* /soc/timers@40000400 */ \
	69, /* /soc/timers@40002000 */ \
	72, /* /soc/timers@40012c00 */ \
	75, /* /soc/timers@40014400 */ \
	78, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v6m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v6m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v6m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v6m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v6m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V6M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 2
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 5
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 6
#define DT_N_S_clocks_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	7, /* /clocks/clk-hsi */ \
	8, /* /clocks/pll */ \
	27, /* /clocks/clk-hse */ \
	28, /* /clocks/clk-lse */ \
	29, /* /clocks/clk-lsi */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = st,stm32g0-hsi-clock):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/clock/st,stm32g0-hsi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hsi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hsi_FOREACH_NODELABEL(fn) fn(clk_hsi)
#define DT_N_S_clocks_S_clk_hsi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hsi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 7
#define DT_N_S_clocks_S_clk_hsi_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS \
	8, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_st_stm32g0_hsi_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi           DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_st_stm32g0_hsi_clock 1
#define DT_N_S_clocks_S_clk_hsi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MODEL_IDX_0 "stm32g0-hsi-clock"
#define DT_N_S_clocks_S_clk_hsi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div 1
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_ENUM_IDX 0
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_ENUM_VAL_1_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32g0-pll-clock):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/clock/st,stm32g0-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL(fn) fn(pll)
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 8
#define DT_N_S_clocks_S_pll_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	6, /* /clocks */ \
	7, /* /clocks/clk-hsi */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	9, /* /soc/rcc@40021000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32g0_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32g0_pll_clock 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0 "stm32g0-pll-clock"
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_pll_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_LEN 1
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32g0-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32g0-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g0-pll-clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_TOKEN st_stm32g0_pll_clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G0_PLL_CLOCK
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hsi
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 1
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 8
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_r 2
#define DT_N_S_clocks_S_pll_P_div_r_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40021000
 *
 * Node identifier: DT_N_S_soc_S_rcc_40021000
 *
 * Binding (compatible = st,stm32f0-rcc):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/clock/st,stm32f0-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40021000_PATH "/soc/rcc@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40021000_FULL_NAME "rcc@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40021000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_40021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_40021000_FOREACH_NODELABEL(fn) fn(rcc)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rcc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40021000_CHILD_NUM 1
#define DT_N_S_soc_S_rcc_40021000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40021000_ORD 9
#define DT_N_S_soc_S_rcc_40021000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40021000_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40021000_SUPPORTS_ORDS \
	10, /* /soc/adc@40012400 */ \
	14, /* /soc/pin-controller@50000000/gpio@50000000 */ \
	15, /* /soc/pin-controller@50000000/gpio@50000800 */ \
	19, /* /soc/i2c@40005400 */ \
	23, /* /soc/i2c@40005800 */ \
	37, /* /soc/dma@40020000 */ \
	42, /* /soc/rcc@40021000/reset-controller */ \
	43, /* /soc/serial@40004400 */ \
	44, /* /soc/serial@40008000 */ \
	47, /* /soc/serial@40013800 */ \
	48, /* /soc/spi@40003800 */ \
	52, /* /soc/spi@40013000 */ \
	54, /* /soc/timers@40007c00 */ \
	55, /* /soc/watchdog@40002c00 */ \
	57, /* /soc/flash-controller@40022000 */ \
	59, /* /soc/pin-controller@50000000/gpio@50000400 */ \
	60, /* /soc/pin-controller@50000000/gpio@50000c00 */ \
	61, /* /soc/pin-controller@50000000/gpio@50001400 */ \
	62, /* /soc/rtc@40002800 */ \
	64, /* /soc/timers@40000000 */ \
	66, /* /soc/timers@40000400 */ \
	69, /* /soc/timers@40002000 */ \
	72, /* /soc/timers@40012c00 */ \
	75, /* /soc/timers@40014400 */ \
	78, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40021000_EXISTS 1
#define DT_N_INST_0_st_stm32f0_rcc DT_N_S_soc_S_rcc_40021000
#define DT_N_NODELABEL_rcc         DT_N_S_soc_S_rcc_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40021000_REG_NUM 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40021000_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MATCHES_st_stm32f0_rcc 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MODEL_IDX_0 "stm32f0-rcc"
#define DT_N_S_soc_S_rcc_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible {"st,stm32f0-rcc"}
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0 "st,stm32f0-rcc"
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f0-rcc
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_TOKEN st_stm32f0_rcc
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F0_RCC
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_40021000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clock_frequency 64000000
#define DT_N_S_soc_S_rcc_40021000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_undershoot_prevention 0
#define DT_N_S_soc_S_rcc_40021000_P_undershoot_prevention_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012400
 *
 * Node identifier: DT_N_S_soc_S_adc_40012400
 *
 * Binding (compatible = st,stm32-adc):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012400_PATH "/soc/adc@40012400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012400_FULL_NAME "adc@40012400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012400_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_40012400_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_40012400_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_40012400_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40012400_CHILD_NUM 0
#define DT_N_S_soc_S_adc_40012400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012400_ORD 10
#define DT_N_S_soc_S_adc_40012400_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012400_SUPPORTS_ORDS \
	11, /* /dietemp */ \
	25, /* /vbat */ \
	26, /* /vref */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012400_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_40012400
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_40012400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012400_REG_NUM 1
#define DT_N_S_soc_S_adc_40012400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_REG_IDX_0_VAL_ADDRESS 1073816576 /* 0x40012400 */
#define DT_N_S_soc_S_adc_40012400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_40012400_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012400_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_40012400_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_40012400_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_40012400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_40012400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012400_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40012400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_status "disabled"
#define DT_N_S_soc_S_adc_40012400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_40012400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_40012400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012400, status, 0)
#define DT_N_S_soc_S_adc_40012400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012400, status, 0)
#define DT_N_S_soc_S_adc_40012400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_status_LEN 1
#define DT_N_S_soc_S_adc_40012400_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012400_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_40012400_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_40012400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_40012400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012400, compatible, 0)
#define DT_N_S_soc_S_adc_40012400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012400, compatible, 0)
#define DT_N_S_soc_S_adc_40012400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_reg {1073816576 /* 0x40012400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_40012400_P_reg_IDX_0 1073816576
#define DT_N_S_soc_S_adc_40012400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_40012400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_interrupts {12 /* 0xc */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012400_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_adc_40012400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_40012400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_adc_40012400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_adc_40012400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012400, clocks, 0)
#define DT_N_S_soc_S_adc_40012400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012400, clocks, 0)
#define DT_N_S_soc_S_adc_40012400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_40012400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_vref_mv 3300
#define DT_N_S_soc_S_adc_40012400_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_resolutions {6316812 /* 0x60630c */, 5333772 /* 0x51630c */, 4350732 /* 0x42630c */, 3367692 /* 0x33630c */}
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_0 6316812
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_1 5333772
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_2 4350732
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_3 3367692
#define DT_N_S_soc_S_adc_40012400_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012400, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 3)
#define DT_N_S_soc_S_adc_40012400_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012400, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 3)
#define DT_N_S_soc_S_adc_40012400_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012400, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012400, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_40012400_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times {3 /* 0x3 */, 5 /* 0x5 */, 8 /* 0x8 */, 13 /* 0xd */, 20 /* 0x14 */, 40 /* 0x28 */, 80 /* 0x50 */, 161 /* 0xa1 */}
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_0 3
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_1 5
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_2 8
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_3 13
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_4 20
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_5 40
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_6 80
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_7 161
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012400, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 7)
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012400, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 7)
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012400, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012400, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012400, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_40012400_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_num_sampling_time_common_channels 2
#define DT_N_S_soc_S_adc_40012400_P_num_sampling_time_common_channels_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_st_adc_sequencer 0
#define DT_N_S_soc_S_adc_40012400_P_st_adc_sequencer_ENUM_IDX 0
#define DT_N_S_soc_S_adc_40012400_P_st_adc_sequencer_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012400_P_st_adc_sequencer_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = st,stm32-temp-cal):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/sensor/st,stm32-temp-cal.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_dietemp_NODELABEL_NUM 1
#define DT_N_S_dietemp_FOREACH_NODELABEL(fn) fn(die_temp)
#define DT_N_S_dietemp_FOREACH_NODELABEL_VARGS(fn, ...) fn(die_temp, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_CHILD_NUM 0
#define DT_N_S_dietemp_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 11
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	10, /* /soc/adc@40012400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_INST_0_st_stm32_temp_cal DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp       DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_IRQ_LEVEL 0
#define DT_N_S_dietemp_COMPAT_MATCHES_st_stm32_temp_cal 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "stm32-temp-cal"
#define DT_N_S_dietemp_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_dietemp_P_status "disabled"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED disabled
#define DT_N_S_dietemp_P_status_STRING_TOKEN disabled
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_IDX_0 "disabled"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_IDX 2
#define DT_N_S_dietemp_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_TOKEN disabled
#define DT_N_S_dietemp_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"st,stm32-temp-cal"}
#define DT_N_S_dietemp_P_compatible_IDX_0 "st,stm32-temp-cal"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-temp-cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN st_stm32_temp_cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TEMP_CAL
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40012400
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 12
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_deferred_init 0
#define DT_N_S_dietemp_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_addr 536835496
#define DT_N_S_dietemp_P_ts_cal1_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_temp 30
#define DT_N_S_dietemp_P_ts_cal1_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_vrefanalog 3000
#define DT_N_S_dietemp_P_ts_cal_vrefanalog_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution 12
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_IDX 0
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_VAL_12_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_addr 536835530
#define DT_N_S_dietemp_P_ts_cal2_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_temp 130
#define DT_N_S_dietemp_P_ts_cal2_temp_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 12
#define DT_N_S_memory_20000000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 8192 /* 0x2000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 8192
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_PATH "/soc/pin-controller@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_FULL_NAME "pin-controller@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_CHILD_NUM 16
#define DT_N_S_soc_S_pin_controller_50000000_CHILD_NUM_STATUS_OKAY 16
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_ORD 13
#define DT_N_S_soc_S_pin_controller_50000000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_SUPPORTS_ORDS \
	14, /* /soc/pin-controller@50000000/gpio@50000000 */ \
	15, /* /soc/pin-controller@50000000/gpio@50000800 */ \
	17, /* /soc/pin-controller@50000000/i2c1_scl_pa9 */ \
	18, /* /soc/pin-controller@50000000/i2c1_sda_pa10 */ \
	21, /* /soc/pin-controller@50000000/i2c2_scl_pa11 */ \
	22, /* /soc/pin-controller@50000000/i2c2_sda_pa12 */ \
	40, /* /soc/pin-controller@50000000/usart2_rx_pa3 */ \
	41, /* /soc/pin-controller@50000000/usart2_tx_pa2 */ \
	45, /* /soc/pin-controller@50000000/usart1_rx_pb7 */ \
	46, /* /soc/pin-controller@50000000/usart1_tx_pb6 */ \
	49, /* /soc/pin-controller@50000000/spi1_miso_pb4 */ \
	50, /* /soc/pin-controller@50000000/spi1_mosi_pb5 */ \
	51, /* /soc/pin-controller@50000000/spi1_sck_pb3 */ \
	59, /* /soc/pin-controller@50000000/gpio@50000400 */ \
	60, /* /soc/pin-controller@50000000/gpio@50000c00 */ \
	61, /* /soc/pin-controller@50000000/gpio@50001400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_50000000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_pin_controller_50000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pinctrl
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_reg {1342177280 /* 0x50000000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_pin_controller_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_50000000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_50000000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_50000000_P_remap_pa11_pa12_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/gpio@50000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_PATH "/soc/pin-controller@50000000/gpio@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FULL_NAME "gpio@50000000"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_ORD 14
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_SUPPORTS_ORDS \
	16, /* /mutex0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_reg {1342177280 /* 0x50000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/gpio@50000800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_PATH "/soc/pin-controller@50000000/gpio@50000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FULL_NAME "gpio@50000800"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_NODELABEL(fn) fn(gpioc)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_ORD 15
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_SUPPORTS_ORDS \
	16, /* /mutex0 */ \
	35, /* /leds */ \
	36, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_REG_IDX_0_VAL_ADDRESS 1342179328 /* 0x50000800 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_reg {1342179328 /* 0x50000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_reg_IDX_0 1342179328
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /mutex0
 *
 * Node identifier: DT_N_S_mutex0
 *
 * Binding (compatible = mutex-gpio):
 *   /home/milho/Repos/zephyr/example-application/dts/bindings/mutex/mutex-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mutex0_PATH "/mutex0"

/* Node's name with unit-address: */
#define DT_N_S_mutex0_FULL_NAME "mutex0"

/* Node parent (/) identifier: */
#define DT_N_S_mutex0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mutex0_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_mutex0_NODELABEL_NUM 1
#define DT_N_S_mutex0_FOREACH_NODELABEL(fn) fn(mutex)
#define DT_N_S_mutex0_FOREACH_NODELABEL_VARGS(fn, ...) fn(mutex, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mutex0_CHILD_NUM 0
#define DT_N_S_mutex0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mutex0_FOREACH_CHILD(fn) 
#define DT_N_S_mutex0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mutex0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mutex0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mutex0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mutex0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mutex0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mutex0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mutex0_ORD 16
#define DT_N_S_mutex0_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mutex0_REQUIRES_ORDS \
	0, /* / */ \
	14, /* /soc/pin-controller@50000000/gpio@50000000 */ \
	15, /* /soc/pin-controller@50000000/gpio@50000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mutex0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mutex0_EXISTS 1
#define DT_N_INST_0_mutex_gpio DT_N_S_mutex0
#define DT_N_NODELABEL_mutex   DT_N_S_mutex0

/* Macros for properties that are special in the specification: */
#define DT_N_S_mutex0_REG_NUM 0
#define DT_N_S_mutex0_RANGES_NUM 0
#define DT_N_S_mutex0_FOREACH_RANGE(fn) 
#define DT_N_S_mutex0_IRQ_NUM 0
#define DT_N_S_mutex0_IRQ_LEVEL 0
#define DT_N_S_mutex0_COMPAT_MATCHES_mutex_gpio 1
#define DT_N_S_mutex0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mutex0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mutex0_P_wakeup_source 0
#define DT_N_S_mutex0_P_wakeup_source_EXISTS 1
#define DT_N_S_mutex0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mutex0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_mutex0_P_compatible {"mutex-gpio"}
#define DT_N_S_mutex0_P_compatible_IDX_0 "mutex-gpio"
#define DT_N_S_mutex0_P_compatible_IDX_0_STRING_UNQUOTED mutex-gpio
#define DT_N_S_mutex0_P_compatible_IDX_0_STRING_TOKEN mutex_gpio
#define DT_N_S_mutex0_P_compatible_IDX_0_STRING_UPPER_TOKEN MUTEX_GPIO
#define DT_N_S_mutex0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mutex0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mutex0, compatible, 0)
#define DT_N_S_mutex0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mutex0, compatible, 0)
#define DT_N_S_mutex0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mutex0, compatible, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mutex0, compatible, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_compatible_LEN 1
#define DT_N_S_mutex0_P_compatible_EXISTS 1
#define DT_N_S_mutex0_P_zephyr_deferred_init 0
#define DT_N_S_mutex0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mutex0_P_enable_gpios_IDX_0_EXISTS 1
#define DT_N_S_mutex0_P_enable_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800
#define DT_N_S_mutex0_P_enable_gpios_IDX_0_VAL_pin 6
#define DT_N_S_mutex0_P_enable_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_mutex0_P_enable_gpios_IDX_0_VAL_flags 0
#define DT_N_S_mutex0_P_enable_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_mutex0_P_enable_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mutex0, enable_gpios, 0)
#define DT_N_S_mutex0_P_enable_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mutex0, enable_gpios, 0)
#define DT_N_S_mutex0_P_enable_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mutex0, enable_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_enable_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mutex0, enable_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_enable_gpios_LEN 1
#define DT_N_S_mutex0_P_enable_gpios_EXISTS 1
#define DT_N_S_mutex0_P_clock_gpios_IDX_0_EXISTS 1
#define DT_N_S_mutex0_P_clock_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000
#define DT_N_S_mutex0_P_clock_gpios_IDX_0_VAL_pin 5
#define DT_N_S_mutex0_P_clock_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_mutex0_P_clock_gpios_IDX_0_VAL_flags 0
#define DT_N_S_mutex0_P_clock_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_mutex0_P_clock_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mutex0, clock_gpios, 0)
#define DT_N_S_mutex0_P_clock_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mutex0, clock_gpios, 0)
#define DT_N_S_mutex0_P_clock_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mutex0, clock_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_clock_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mutex0, clock_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_clock_gpios_LEN 1
#define DT_N_S_mutex0_P_clock_gpios_EXISTS 1
#define DT_N_S_mutex0_P_data_gpios_IDX_0_EXISTS 1
#define DT_N_S_mutex0_P_data_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000
#define DT_N_S_mutex0_P_data_gpios_IDX_0_VAL_pin 6
#define DT_N_S_mutex0_P_data_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_mutex0_P_data_gpios_IDX_0_VAL_flags 0
#define DT_N_S_mutex0_P_data_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_mutex0_P_data_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mutex0, data_gpios, 0)
#define DT_N_S_mutex0_P_data_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mutex0, data_gpios, 0)
#define DT_N_S_mutex0_P_data_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mutex0, data_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_data_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mutex0, data_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_data_gpios_LEN 1
#define DT_N_S_mutex0_P_data_gpios_EXISTS 1
#define DT_N_S_mutex0_P_reset_gpios_IDX_0_EXISTS 1
#define DT_N_S_mutex0_P_reset_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000
#define DT_N_S_mutex0_P_reset_gpios_IDX_0_VAL_pin 7
#define DT_N_S_mutex0_P_reset_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_mutex0_P_reset_gpios_IDX_0_VAL_flags 0
#define DT_N_S_mutex0_P_reset_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_mutex0_P_reset_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mutex0, reset_gpios, 0)
#define DT_N_S_mutex0_P_reset_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mutex0, reset_gpios, 0)
#define DT_N_S_mutex0_P_reset_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mutex0, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_reset_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mutex0, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_mutex0_P_reset_gpios_LEN 1
#define DT_N_S_mutex0_P_reset_gpios_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/i2c1_scl_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_PATH "/soc/pin-controller@50000000/i2c1_scl_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FULL_NAME "i2c1_scl_pa9"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_NODELABEL(fn) fn(i2c1_scl_pa9)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_scl_pa9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_ORD 17
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_SUPPORTS_ORDS \
	19, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pa9 DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_pinmux 294
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/i2c1_sda_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_PATH "/soc/pin-controller@50000000/i2c1_sda_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FULL_NAME "i2c1_sda_pa10"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_NODELABEL(fn) fn(i2c1_sda_pa10)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_sda_pa10, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_ORD 18
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_SUPPORTS_ORDS \
	19, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pa10 DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_pinmux 326
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005400_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 19
#define DT_N_S_soc_S_i2c_40005400_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	17, /* /soc/pin-controller@50000000/i2c1_scl_pa9 */ \
	18, /* /soc/pin-controller@50000000/i2c1_sda_pa10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS \
	20, /* /smbus1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_combined_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_combined_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_combined_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_combined_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_combined_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {23 /* 0x17 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"combined"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "combined"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UNQUOTED combined
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN combined
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN COMBINED
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /smbus1
 *
 * Node identifier: DT_N_S_smbus1
 *
 * Binding (compatible = st,stm32-smbus):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/smbus/st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus1_PATH "/smbus1"

/* Node's name with unit-address: */
#define DT_N_S_smbus1_FULL_NAME "smbus1"

/* Node parent (/) identifier: */
#define DT_N_S_smbus1_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus1_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus1_NODELABEL_NUM 1
#define DT_N_S_smbus1_FOREACH_NODELABEL(fn) fn(smbus1)
#define DT_N_S_smbus1_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus1_CHILD_NUM 0
#define DT_N_S_smbus1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus1_FOREACH_CHILD(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus1_ORD 20
#define DT_N_S_smbus1_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus1_REQUIRES_ORDS \
	0, /* / */ \
	19, /* /soc/i2c@40005400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus1_EXISTS 1
#define DT_N_INST_0_st_stm32_smbus DT_N_S_smbus1
#define DT_N_NODELABEL_smbus1      DT_N_S_smbus1

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus1_REG_NUM 0
#define DT_N_S_smbus1_RANGES_NUM 0
#define DT_N_S_smbus1_FOREACH_RANGE(fn) 
#define DT_N_S_smbus1_IRQ_NUM 0
#define DT_N_S_smbus1_IRQ_LEVEL 0
#define DT_N_S_smbus1_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus1_P_wakeup_source 0
#define DT_N_S_smbus1_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_smbus1_P_status "disabled"
#define DT_N_S_smbus1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus1_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus1_P_status_IDX_0 "disabled"
#define DT_N_S_smbus1_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_status_ENUM_IDX 2
#define DT_N_S_smbus1_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus1_P_status_ENUM_TOKEN disabled
#define DT_N_S_smbus1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_LEN 1
#define DT_N_S_smbus1_P_status_EXISTS 1
#define DT_N_S_smbus1_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus1_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_LEN 1
#define DT_N_S_smbus1_P_compatible_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_deferred_init 0
#define DT_N_S_smbus1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus1_P_i2c DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_LEN 1
#define DT_N_S_smbus1_P_i2c_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/i2c2_scl_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_PATH "/soc/pin-controller@50000000/i2c2_scl_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FULL_NAME "i2c2_scl_pa11"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_NODELABEL(fn) fn(i2c2_scl_pa11)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2_scl_pa11, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_ORD 21
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_SUPPORTS_ORDS \
	23, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pa11 DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_pinmux 358
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/i2c2_sda_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_PATH "/soc/pin-controller@50000000/i2c2_sda_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FULL_NAME "i2c2_sda_pa12"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_NODELABEL(fn) fn(i2c2_sda_pa12)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2_sda_pa12, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_ORD 22
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_SUPPORTS_ORDS \
	23, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pa12 DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_pinmux 390
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005800_NODELABEL_NUM 2
#define DT_N_S_soc_S_i2c_40005800_FOREACH_NODELABEL(fn) fn(i2c2) fn(arduino_nano_i2c)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2, __VA_ARGS__) fn(arduino_nano_i2c, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 23
#define DT_N_S_soc_S_i2c_40005800_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	21, /* /soc/pin-controller@50000000/i2c2_scl_pa11 */ \
	22, /* /soc/pin-controller@50000000/i2c2_sda_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS \
	24, /* /smbus2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2     DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2             DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_arduino_nano_i2c DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_combined_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_combined_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_combined_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_combined_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_combined_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"combined"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "combined"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UNQUOTED combined
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN combined
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN COMBINED
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /smbus2
 *
 * Node identifier: DT_N_S_smbus2
 *
 * Binding (compatible = st,stm32-smbus):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/smbus/st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus2_PATH "/smbus2"

/* Node's name with unit-address: */
#define DT_N_S_smbus2_FULL_NAME "smbus2"

/* Node parent (/) identifier: */
#define DT_N_S_smbus2_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus2_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus2_NODELABEL_NUM 1
#define DT_N_S_smbus2_FOREACH_NODELABEL(fn) fn(smbus2)
#define DT_N_S_smbus2_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus2_CHILD_NUM 0
#define DT_N_S_smbus2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus2_FOREACH_CHILD(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus2_ORD 24
#define DT_N_S_smbus2_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus2_REQUIRES_ORDS \
	0, /* / */ \
	23, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus2_EXISTS 1
#define DT_N_INST_1_st_stm32_smbus DT_N_S_smbus2
#define DT_N_NODELABEL_smbus2      DT_N_S_smbus2

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus2_REG_NUM 0
#define DT_N_S_smbus2_RANGES_NUM 0
#define DT_N_S_smbus2_FOREACH_RANGE(fn) 
#define DT_N_S_smbus2_IRQ_NUM 0
#define DT_N_S_smbus2_IRQ_LEVEL 0
#define DT_N_S_smbus2_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus2_P_wakeup_source 0
#define DT_N_S_smbus2_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_smbus2_P_status "disabled"
#define DT_N_S_smbus2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus2_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus2_P_status_IDX_0 "disabled"
#define DT_N_S_smbus2_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_status_ENUM_IDX 2
#define DT_N_S_smbus2_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus2_P_status_ENUM_TOKEN disabled
#define DT_N_S_smbus2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_LEN 1
#define DT_N_S_smbus2_P_status_EXISTS 1
#define DT_N_S_smbus2_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus2_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_LEN 1
#define DT_N_S_smbus2_P_compatible_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_deferred_init 0
#define DT_N_S_smbus2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus2_P_i2c DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_LEN 1
#define DT_N_S_smbus2_P_i2c_EXISTS 1

/*
 * Devicetree node: /vbat
 *
 * Node identifier: DT_N_S_vbat
 *
 * Binding (compatible = st,stm32-vbat):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/sensor/st,stm32-vbat.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbat_PATH "/vbat"

/* Node's name with unit-address: */
#define DT_N_S_vbat_FULL_NAME "vbat"

/* Node parent (/) identifier: */
#define DT_N_S_vbat_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbat_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_vbat_NODELABEL_NUM 1
#define DT_N_S_vbat_FOREACH_NODELABEL(fn) fn(vbat)
#define DT_N_S_vbat_FOREACH_NODELABEL_VARGS(fn, ...) fn(vbat, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbat_CHILD_NUM 0
#define DT_N_S_vbat_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vbat_FOREACH_CHILD(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbat_ORD 25
#define DT_N_S_vbat_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbat_REQUIRES_ORDS \
	0, /* / */ \
	10, /* /soc/adc@40012400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbat_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbat_EXISTS 1
#define DT_N_INST_0_st_stm32_vbat DT_N_S_vbat
#define DT_N_NODELABEL_vbat       DT_N_S_vbat

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbat_REG_NUM 0
#define DT_N_S_vbat_RANGES_NUM 0
#define DT_N_S_vbat_FOREACH_RANGE(fn) 
#define DT_N_S_vbat_IRQ_NUM 0
#define DT_N_S_vbat_IRQ_LEVEL 0
#define DT_N_S_vbat_COMPAT_MATCHES_st_stm32_vbat 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0 "stm32-vbat"
#define DT_N_S_vbat_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbat_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbat_P_wakeup_source 0
#define DT_N_S_vbat_P_wakeup_source_EXISTS 1
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_vbat_P_status "disabled"
#define DT_N_S_vbat_P_status_STRING_UNQUOTED disabled
#define DT_N_S_vbat_P_status_STRING_TOKEN disabled
#define DT_N_S_vbat_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_vbat_P_status_IDX_0 "disabled"
#define DT_N_S_vbat_P_status_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_status_ENUM_IDX 2
#define DT_N_S_vbat_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_vbat_P_status_ENUM_TOKEN disabled
#define DT_N_S_vbat_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_LEN 1
#define DT_N_S_vbat_P_status_EXISTS 1
#define DT_N_S_vbat_P_compatible {"st,stm32-vbat"}
#define DT_N_S_vbat_P_compatible_IDX_0 "st,stm32-vbat"
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_TOKEN st_stm32_vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VBAT
#define DT_N_S_vbat_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_LEN 1
#define DT_N_S_vbat_P_compatible_EXISTS 1
#define DT_N_S_vbat_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40012400
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input 14
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_LEN 1
#define DT_N_S_vbat_P_io_channels_EXISTS 1
#define DT_N_S_vbat_P_zephyr_deferred_init 0
#define DT_N_S_vbat_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vbat_P_ratio 3
#define DT_N_S_vbat_P_ratio_EXISTS 1

/*
 * Devicetree node: /vref
 *
 * Node identifier: DT_N_S_vref
 *
 * Binding (compatible = st,stm32-vref):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/sensor/st,stm32-vref.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vref_PATH "/vref"

/* Node's name with unit-address: */
#define DT_N_S_vref_FULL_NAME "vref"

/* Node parent (/) identifier: */
#define DT_N_S_vref_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vref_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_vref_NODELABEL_NUM 1
#define DT_N_S_vref_FOREACH_NODELABEL(fn) fn(vref)
#define DT_N_S_vref_FOREACH_NODELABEL_VARGS(fn, ...) fn(vref, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vref_CHILD_NUM 0
#define DT_N_S_vref_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vref_FOREACH_CHILD(fn) 
#define DT_N_S_vref_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vref_ORD 26
#define DT_N_S_vref_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vref_REQUIRES_ORDS \
	0, /* / */ \
	10, /* /soc/adc@40012400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vref_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vref_EXISTS 1
#define DT_N_INST_0_st_stm32_vref DT_N_S_vref
#define DT_N_NODELABEL_vref       DT_N_S_vref

/* Macros for properties that are special in the specification: */
#define DT_N_S_vref_REG_NUM 0
#define DT_N_S_vref_RANGES_NUM 0
#define DT_N_S_vref_FOREACH_RANGE(fn) 
#define DT_N_S_vref_IRQ_NUM 0
#define DT_N_S_vref_IRQ_LEVEL 0
#define DT_N_S_vref_COMPAT_MATCHES_st_stm32_vref 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vref_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_MODEL_IDX_0 "stm32-vref"
#define DT_N_S_vref_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vref_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vref_P_wakeup_source 0
#define DT_N_S_vref_P_wakeup_source_EXISTS 1
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_vref_P_status "disabled"
#define DT_N_S_vref_P_status_STRING_UNQUOTED disabled
#define DT_N_S_vref_P_status_STRING_TOKEN disabled
#define DT_N_S_vref_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_vref_P_status_IDX_0 "disabled"
#define DT_N_S_vref_P_status_IDX_0_EXISTS 1
#define DT_N_S_vref_P_status_ENUM_IDX 2
#define DT_N_S_vref_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_vref_P_status_ENUM_TOKEN disabled
#define DT_N_S_vref_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_LEN 1
#define DT_N_S_vref_P_status_EXISTS 1
#define DT_N_S_vref_P_compatible {"st,stm32-vref"}
#define DT_N_S_vref_P_compatible_IDX_0 "st,stm32-vref"
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_TOKEN st_stm32_vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VREF
#define DT_N_S_vref_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_LEN 1
#define DT_N_S_vref_P_compatible_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40012400
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input 13
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_LEN 1
#define DT_N_S_vref_P_io_channels_EXISTS 1
#define DT_N_S_vref_P_zephyr_deferred_init 0
#define DT_N_S_vref_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_addr 536835498
#define DT_N_S_vref_P_vrefint_cal_addr_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_mv 3000
#define DT_N_S_vref_P_vrefint_cal_mv_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hse_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hse_FOREACH_NODELABEL(fn) fn(clk_hse)
#define DT_N_S_clocks_S_clk_hse_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hse, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 27
#define DT_N_S_clocks_S_clk_hse_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0 "stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_css_enabled 0
#define DT_N_S_clocks_S_clk_hse_P_css_enabled_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = st,stm32-lse-clock):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/clock/st,stm32-lse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_lse_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_lse_FOREACH_NODELABEL(fn) fn(clk_lse)
#define DT_N_S_clocks_S_clk_lse_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_lse, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 28
#define DT_N_S_clocks_S_clk_lse_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_0_st_stm32_lse_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse         DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_st_stm32_lse_clock 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0 "stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability 0
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_ENUM_IDX 0
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_ENUM_VAL_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass 0
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_lsi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_lsi_FOREACH_NODELABEL(fn) fn(clk_lsi)
#define DT_N_S_clocks_S_clk_lsi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_lsi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 29
#define DT_N_S_clocks_S_clk_lsi_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 30
#define DT_N_S_cpus_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	31, /* /cpus/power-states */ \
	34, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 2
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 31
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	30, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	32, /* /cpus/power-states/state0 */ \
	33, /* /cpus/power-states/state1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/state0
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_state0
 *
 * Binding (compatible = zephyr,power-state):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_state0_PATH "/cpus/power-states/state0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_state0_FULL_NAME "state0"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_state0_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_state0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_state0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_NODELABEL(fn) fn(stop0)
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_NODELABEL_VARGS(fn, ...) fn(stop0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_state0_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_state0_ORD 32
#define DT_N_S_cpus_S_power_states_S_state0_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_state0_REQUIRES_ORDS \
	31, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_state0_SUPPORTS_ORDS \
	34, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_state0_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_state0
#define DT_N_NODELABEL_stop0           DT_N_S_cpus_S_power_states_S_state0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_state0_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_state0_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_state0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_state0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_substate_id 1
#define DT_N_S_cpus_S_power_states_S_state0_P_substate_id_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_min_residency_us 20
#define DT_N_S_cpus_S_power_states_S_state0_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_state0_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/state1
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_state1
 *
 * Binding (compatible = zephyr,power-state):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_state1_PATH "/cpus/power-states/state1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_state1_FULL_NAME "state1"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_state1_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_state1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_state1_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_NODELABEL(fn) fn(stop1)
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_NODELABEL_VARGS(fn, ...) fn(stop1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_state1_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_state1_ORD 33
#define DT_N_S_cpus_S_power_states_S_state1_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_state1_REQUIRES_ORDS \
	31, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_state1_SUPPORTS_ORDS \
	34, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_state1_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_state1
#define DT_N_NODELABEL_stop1           DT_N_S_cpus_S_power_states_S_state1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_state1_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_state1_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_state1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_state1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_substate_id 2
#define DT_N_S_cpus_S_power_states_S_state1_P_substate_id_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_min_residency_us 100
#define DT_N_S_cpus_S_power_states_S_state1_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_state1_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m0+):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/cpu/arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 34
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	30, /* /cpus */ \
	32, /* /cpus/power-states/state0 */ \
	33, /* /cpus/power-states/state1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m0_ DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m0+
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 1
#define DT_N_S_leds_FOREACH_NODELABEL(fn) fn(leds)
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) fn(leds, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 1
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 35
#define DT_N_S_leds_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	15, /* /soc/pin-controller@50000000/gpio@50000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	36, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds
#define DT_N_NODELABEL_leds   DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_3_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL(fn) fn(green_led_3)
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_led_3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_3_CHILD_NUM 0
#define DT_N_S_leds_S_led_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 36
#define DT_N_S_leds_S_led_3_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	15, /* /soc/pin-controller@50000000/gpio@50000800 */ \
	35, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_green_led_3 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD3"
#define DT_N_S_leds_S_led_3_P_label_STRING_UNQUOTED User LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD3
#define DT_N_S_leds_S_led_3_P_label_IDX_0 "User LD3"
#define DT_N_S_leds_S_led_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_LEN 1
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32-dma-v2):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/dma/st,stm32-dma-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020000_PATH "/soc/dma@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020000_FULL_NAME "dma@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40020000_FOREACH_NODELABEL(fn) fn(dma1)
#define DT_N_S_soc_S_dma_40020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020000_ORD 37
#define DT_N_S_soc_S_dma_40020000_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v2 DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 5
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 10
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 10
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 11
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 11
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32_dma_v2 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0 "stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "disabled"
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32-dma-v2"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v2
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v2
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V2
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 11 /* 0xb */, 0 /* 0x0 */, 11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 10
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 10
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 11
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 11
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 56
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_requests 5
#define DT_N_S_soc_S_dma_40020000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_offset 0
#define DT_N_S_soc_S_dma_40020000_P_dma_offset_EXISTS 1

/*
 * Devicetree node: /soc/dmamux@40020800
 *
 * Node identifier: DT_N_S_soc_S_dmamux_40020800
 *
 * Binding (compatible = st,stm32-dmamux):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/dma/st,stm32-dmamux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dmamux_40020800_PATH "/soc/dmamux@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dmamux_40020800_FULL_NAME "dmamux@40020800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dmamux_40020800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dmamux_40020800_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dmamux_40020800_NODELABEL_NUM 1
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_NODELABEL(fn) fn(dmamux1)
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_NODELABEL_VARGS(fn, ...) fn(dmamux1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dmamux_40020800_CHILD_NUM 0
#define DT_N_S_soc_S_dmamux_40020800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dmamux_40020800_ORD 38
#define DT_N_S_soc_S_dmamux_40020800_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dmamux_40020800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dmamux_40020800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dmamux_40020800_EXISTS 1
#define DT_N_INST_0_st_stm32_dmamux DT_N_S_soc_S_dmamux_40020800
#define DT_N_NODELABEL_dmamux1      DT_N_S_soc_S_dmamux_40020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dmamux_40020800_REG_NUM 1
#define DT_N_S_soc_S_dmamux_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_dmamux_40020800_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_dmamux_40020800_RANGES_NUM 0
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dmamux_40020800_IRQ_NUM 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmamux_40020800_IRQ_LEVEL 1
#define DT_N_S_soc_S_dmamux_40020800_COMPAT_MATCHES_st_stm32_dmamux 1
#define DT_N_S_soc_S_dmamux_40020800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dmamux_40020800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_COMPAT_MODEL_IDX_0 "stm32-dmamux"
#define DT_N_S_soc_S_dmamux_40020800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dmamux_40020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dmamux_40020800_P_wakeup_source 0
#define DT_N_S_soc_S_dmamux_40020800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dmamux_40020800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_status "disabled"
#define DT_N_S_soc_S_dmamux_40020800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dmamux_40020800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dmamux_40020800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dmamux_40020800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dmamux_40020800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dmamux_40020800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, status, 0)
#define DT_N_S_soc_S_dmamux_40020800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmamux_40020800, status, 0)
#define DT_N_S_soc_S_dmamux_40020800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmamux_40020800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_status_LEN 1
#define DT_N_S_soc_S_dmamux_40020800_P_status_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_compatible {"st,stm32-dmamux"}
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0 "st,stm32-dmamux"
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dmamux
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0_STRING_TOKEN st_stm32_dmamux
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMAMUX
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, compatible, 0)
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmamux_40020800, compatible, 0)
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmamux_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_reg {1073874944 /* 0x40020800 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_1 2048
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dmamux_40020800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_dma_channels 5
#define DT_N_S_soc_S_dmamux_40020800_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_dma_generators 4
#define DT_N_S_soc_S_dmamux_40020800_P_dma_generators_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_dma_requests 49
#define DT_N_S_soc_S_dmamux_40020800_P_dma_requests_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40021800
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40021800
 *
 * Binding (compatible = st,stm32g0-exti):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/interrupt-controller/st,stm32g0-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40021800_PATH "/soc/interrupt-controller@40021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40021800_FULL_NAME "interrupt-controller@40021800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40021800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40021800_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_40021800_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_NODELABEL(fn) fn(exti)
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_NODELABEL_VARGS(fn, ...) fn(exti, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_40021800_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40021800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40021800_ORD 39
#define DT_N_S_soc_S_interrupt_controller_40021800_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40021800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40021800_EXISTS 1
#define DT_N_INST_0_st_stm32g0_exti DT_N_S_soc_S_interrupt_controller_40021800
#define DT_N_INST_0_st_stm32_exti   DT_N_S_soc_S_interrupt_controller_40021800
#define DT_N_NODELABEL_exti         DT_N_S_soc_S_interrupt_controller_40021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40021800_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_REG_IDX_0_VAL_ADDRESS 1073879040 /* 0x40021800 */
#define DT_N_S_soc_S_interrupt_controller_40021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40021800_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NUM 3
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_VAL_irq 6
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_VAL_irq 7
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_LEVEL 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line0_1_VAL_irq DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line0_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line0_1_VAL_priority DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line0_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line0_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line2_3_VAL_irq DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line2_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line2_3_VAL_priority DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line2_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line2_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line4_15_VAL_irq DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line4_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line4_15_VAL_priority DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line4_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_IRQ_NAME_line4_15_CONTROLLER DT_N_S_soc_S_interrupt_controller_40021800_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_MATCHES_st_stm32g0_exti 1
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_MODEL_IDX_0 "stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_COMPAT_MODEL_IDX_1 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40021800_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible {"st,stm32g0-exti", "st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_0 "st,stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g0-exti
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_0_STRING_TOKEN st_stm32g0_exti
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G0_EXTI
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_1 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-exti
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_1_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_LEN 2
#define DT_N_S_soc_S_interrupt_controller_40021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_reg {1073879040 /* 0x40021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40021800_P_reg_IDX_0 1073879040
#define DT_N_S_soc_S_interrupt_controller_40021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts {5 /* 0x5 */, 0 /* 0x0 */, 6 /* 0x6 */, 0 /* 0x0 */, 7 /* 0x7 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_2 6
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_4 7
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names {"line0-1", "line2-3", "line4-15"}
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_0 "line0-1"
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_0_STRING_UNQUOTED line0-1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_0_STRING_TOKEN line0_1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0_1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_1 "line2-3"
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_1_STRING_UNQUOTED line2-3
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_1_STRING_TOKEN line2_3
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE2_3
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_2 "line4-15"
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_2_STRING_UNQUOTED line4-15
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_2_STRING_TOKEN line4_15
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE4_15
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 2)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 2)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_LEN 3
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_num_lines 16
#define DT_N_S_soc_S_interrupt_controller_40021800_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges {0 /* 0x0 */, 2 /* 0x2 */, 2 /* 0x2 */, 2 /* 0x2 */, 4 /* 0x4 */, 12 /* 0xc */}
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_1 2
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_2 2
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_3 2
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_4 4
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_5 12
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 5)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 5)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 5, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40021800, line_ranges, 5, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_LEN 6
#define DT_N_S_soc_S_interrupt_controller_40021800_P_line_ranges_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/usart2_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_PATH "/soc/pin-controller@50000000/usart2_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FULL_NAME "usart2_rx_pa3"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_NODELABEL(fn) fn(usart2_rx_pa3)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2_rx_pa3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_ORD 40
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_SUPPORTS_ORDS \
	43, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pa3 DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_pinmux 97
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/usart2_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_PATH "/soc/pin-controller@50000000/usart2_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FULL_NAME "usart2_tx_pa2"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_NODELABEL(fn) fn(usart2_tx_pa2)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2_tx_pa2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_ORD 41
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_SUPPORTS_ORDS \
	43, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pa2 DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_pinmux 65
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40021000/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_rcc_40021000_S_reset_controller
 *
 * Binding (compatible = st,stm32-rcc-rctl):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/reset/st,stm32-rcc-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_PATH "/soc/rcc@40021000/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FULL_NAME "reset-controller"

/* Node parent (/soc/rcc@40021000) identifier: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_PARENT DT_N_S_soc_S_rcc_40021000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_NODELABEL(fn) fn(rctl)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(rctl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_CHILD_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_ORD 42
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_SUPPORTS_ORDS \
	43, /* /soc/serial@40004400 */ \
	44, /* /soc/serial@40008000 */ \
	47, /* /soc/serial@40013800 */ \
	64, /* /soc/timers@40000000 */ \
	66, /* /soc/timers@40000400 */ \
	69, /* /soc/timers@40002000 */ \
	72, /* /soc/timers@40012c00 */ \
	75, /* /soc/timers@40014400 */ \
	78, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc_rctl DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_NODELABEL_rctl           DT_N_S_soc_S_rcc_40021000_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_MATCHES_st_stm32_rcc_rctl 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_COMPAT_MODEL_IDX_0 "stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible {"st,stm32-rcc-rctl"}
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0 "st,stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc-rctl
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc_rctl
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC_RCTL
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_set_bit_to_deassert 0
#define DT_N_S_soc_S_rcc_40021000_S_reset_controller_P_set_bit_to_deassert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004400_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004400_FOREACH_NODELABEL(fn) fn(usart2)
#define DT_N_S_soc_S_serial_40004400_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 43
#define DT_N_S_soc_S_serial_40004400_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	40, /* /soc/pin-controller@50000000/usart2_rx_pa3 */ \
	41, /* /soc/pin-controller@50000000/usart2_tx_pa2 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id 1425
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_enable 0
#define DT_N_S_soc_S_serial_40004400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_invert 0
#define DT_N_S_soc_S_serial_40004400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable_EXISTS 1

/*
 * Devicetree node: /soc/serial@40008000
 *
 * Node identifier: DT_N_S_soc_S_serial_40008000
 *
 * Binding (compatible = st,stm32-lpuart):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/serial/st,stm32-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40008000_PATH "/soc/serial@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40008000_FULL_NAME "serial@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40008000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40008000_FOREACH_NODELABEL(fn) fn(lpuart1)
#define DT_N_S_soc_S_serial_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lpuart1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40008000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40008000_ORD 44
#define DT_N_S_soc_S_serial_40008000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40008000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40008000_EXISTS 1
#define DT_N_INST_0_st_stm32_lpuart DT_N_S_soc_S_serial_40008000
#define DT_N_INST_2_st_stm32_uart   DT_N_S_soc_S_serial_40008000
#define DT_N_NODELABEL_lpuart1      DT_N_S_soc_S_serial_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40008000_REG_NUM 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_lpuart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_0 "stm32-lpuart"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status "disabled"
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, status, 0)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, status, 0)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible {"st,stm32-lpuart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0 "st,stm32-lpuart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lpuart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_TOKEN st_stm32_lpuart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPUART
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_VAL_id 1428
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, resets, 0)
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, resets, 0)
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40008000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40008000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_single_wire 0
#define DT_N_S_soc_S_serial_40008000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40008000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_enable 0
#define DT_N_S_soc_S_serial_40008000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40008000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40008000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_invert 0
#define DT_N_S_soc_S_serial_40008000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40008000_P_fifo_enable_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/usart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_PATH "/soc/pin-controller@50000000/usart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FULL_NAME "usart1_rx_pb7"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_NODELABEL(fn) fn(usart1_rx_pb7)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1_rx_pb7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_ORD 45
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_SUPPORTS_ORDS \
	47, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb7 DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_pinmux 736
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/usart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_PATH "/soc/pin-controller@50000000/usart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FULL_NAME "usart1_tx_pb6"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_NODELABEL(fn) fn(usart1_tx_pb6)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1_tx_pb6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_ORD 46
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_SUPPORTS_ORDS \
	47, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pb6 DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_pinmux 704
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40013800_PATH "/soc/serial@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40013800_FULL_NAME "serial@40013800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40013800_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40013800_NODELABEL_NUM 2
#define DT_N_S_soc_S_serial_40013800_FOREACH_NODELABEL(fn) fn(usart1) fn(arduino_nano_serial)
#define DT_N_S_soc_S_serial_40013800_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1, __VA_ARGS__) fn(arduino_nano_serial, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40013800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40013800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40013800_ORD 47
#define DT_N_S_soc_S_serial_40013800_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40013800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */ \
	45, /* /soc/pin-controller@50000000/usart1_rx_pb7 */ \
	46, /* /soc/pin-controller@50000000/usart1_tx_pb6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_1_st_stm32_usart         DT_N_S_soc_S_serial_40013800
#define DT_N_INST_1_st_stm32_uart          DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1              DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_arduino_nano_serial DT_N_S_soc_S_serial_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40013800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40013800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "disabled"
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40013800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id 1550
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_single_wire 0
#define DT_N_S_soc_S_serial_40013800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_enable 0
#define DT_N_S_soc_S_serial_40013800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_invert 0
#define DT_N_S_soc_S_serial_40013800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40013800_P_fifo_enable_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40003800_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40003800_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_40003800_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 48
#define DT_N_S_soc_S_spi_40003800_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/spi1_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_PATH "/soc/pin-controller@50000000/spi1_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FULL_NAME "spi1_miso_pb4"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_NODELABEL(fn) fn(spi1_miso_pb4)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_miso_pb4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_ORD 49
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_SUPPORTS_ORDS \
	52, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pb4 DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_pinmux 640
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/spi1_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_PATH "/soc/pin-controller@50000000/spi1_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FULL_NAME "spi1_mosi_pb5"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_NODELABEL(fn) fn(spi1_mosi_pb5)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_mosi_pb5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_ORD 50
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_SUPPORTS_ORDS \
	52, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pb5 DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_pinmux 672
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/spi1_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_PATH "/soc/pin-controller@50000000/spi1_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FULL_NAME "spi1_sck_pb3"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_NODELABEL(fn) fn(spi1_sck_pb3)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_sck_pb3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_ORD 51
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_SUPPORTS_ORDS \
	52, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pb3 DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_pinmux 608
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40013000_NODELABEL_NUM 2
#define DT_N_S_soc_S_spi_40013000_FOREACH_NODELABEL(fn) fn(spi1) fn(arduino_nano_spi)
#define DT_N_S_soc_S_spi_40013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__) fn(arduino_nano_spi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 52
#define DT_N_S_soc_S_spi_40013000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	49, /* /soc/pin-controller@50000000/spi1_miso_pb4 */ \
	50, /* /soc/pin-controller@50000000/spi1_mosi_pb5 */ \
	51, /* /soc/pin-controller@50000000/spi1_sck_pb3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi_fifo   DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi        DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1             DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_arduino_nano_spi DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 3
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv6m-systick):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/arm,armv6m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 53
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv6m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv6m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv6m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv6m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv6m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV6M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40007c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40007c00
 *
 * Binding (compatible = st,stm32-lptim):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40007c00_PATH "/soc/timers@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40007c00_FULL_NAME "timers@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40007c00_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40007c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40007c00_FOREACH_NODELABEL(fn) fn(lptim1)
#define DT_N_S_soc_S_timers_40007c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40007c00_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40007c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40007c00_ORD 54
#define DT_N_S_soc_S_timers_40007c00_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40007c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40007c00_EXISTS 1
#define DT_N_INST_0_st_stm32_lptim DT_N_S_soc_S_timers_40007c00
#define DT_N_NODELABEL_lptim1      DT_N_S_soc_S_timers_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40007c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40007c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_40007c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40007c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40007c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40007c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40007c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40007c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, status, 0)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, status, 0)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits 2147483648
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40007c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_st_prescaler 1
#define DT_N_S_soc_S_timers_40007c00_P_st_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40007c00_P_st_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_st_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40002c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_NODELABEL(fn) fn(wwdg)
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(wwdg, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 55
#define DT_N_S_soc_S_watchdog_40002c00_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-window-watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL(fn) fn(iwdg)
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(iwdg, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 56
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_IRQ_LEVEL 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_PATH "/soc/flash-controller@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME "flash-controller@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_NODELABEL(fn) fn(flash)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_ORD 57
#define DT_N_S_soc_S_flash_controller_40022000_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_SUPPORTS_ORDS \
	58, /* /soc/flash-controller@40022000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40022000
#define DT_N_INST_0_st_stm32g0_flash_controller DT_N_S_soc_S_flash_controller_40022000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_LEVEL 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0 "stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32g0_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1 "stm32g0-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible {"st,stm32-flash-controller", "st,stm32g0-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1 "st,stm32g0-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32g0-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_TOKEN st_stm32g0_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32G0_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts {3 /* 0x3 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bus 56
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte 85
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/mtd/st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PATH "/soc/flash-controller@40022000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40022000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40022000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD 58
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REQUIRES_ORDS \
	57, /* /soc/flash-controller@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0 "stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size 2048
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size 8
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time 40
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/gpio@50000400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_PATH "/soc/pin-controller@50000000/gpio@50000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FULL_NAME "gpio@50000400"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_ORD 59
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_REG_IDX_0_VAL_ADDRESS 1342178304 /* 0x50000400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_reg {1342178304 /* 0x50000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_reg_IDX_0 1342178304
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/gpio@50000c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_PATH "/soc/pin-controller@50000000/gpio@50000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FULL_NAME "gpio@50000c00"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_NODELABEL(fn) fn(gpiod)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiod, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_ORD 60
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_REG_IDX_0_VAL_ADDRESS 1342180352 /* 0x50000c00 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_reg {1342180352 /* 0x50000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_reg_IDX_0 1342180352
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@50000000/gpio@50001400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400
 *
 * Binding (compatible = st,stm32-gpio):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_PATH "/soc/pin-controller@50000000/gpio@50001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FULL_NAME "gpio@50001400"

/* Node parent (/soc/pin-controller@50000000) identifier: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_PARENT DT_N_S_soc_S_pin_controller_50000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_NODELABEL(fn) fn(gpiof)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiof, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_ORD 61
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	13, /* /soc/pin-controller@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_REG_IDX_0_VAL_ADDRESS 1342182400 /* 0x50001400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_reg {1342182400 /* 0x50001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_reg_IDX_0 1342182400
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_40002800_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_40002800_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_CHILD_NUM 1
#define DT_N_S_soc_S_rtc_40002800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 62
#define DT_N_S_soc_S_rtc_40002800_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS \
	63, /* /soc/rtc@40002800/backup_regs */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_40002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0 "stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "disabled"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, status, 0)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RTC
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_alarms_count 2
#define DT_N_S_soc_S_rtc_40002800_P_alarms_count_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_alrm_exti_line 19
#define DT_N_S_soc_S_rtc_40002800_P_alrm_exti_line_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800/backup_regs
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800_S_backup_regs
 *
 * Binding (compatible = st,stm32-bbram):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/memory-controllers/st,stm32-bbram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PATH "/soc/rtc@40002800/backup_regs"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FULL_NAME "backup_regs"

/* Node parent (/soc/rtc@40002800) identifier: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PARENT DT_N_S_soc_S_rtc_40002800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_NODELABEL(fn) fn(bbram)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_NODELABEL_VARGS(fn, ...) fn(bbram, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_ORD 63
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_REQUIRES_ORDS \
	62, /* /soc/rtc@40002800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_EXISTS 1
#define DT_N_INST_0_st_stm32_bbram DT_N_S_soc_S_rtc_40002800_S_backup_regs
#define DT_N_NODELABEL_bbram       DT_N_S_soc_S_rtc_40002800_S_backup_regs

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_REG_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_IRQ_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_IRQ_LEVEL 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MATCHES_st_stm32_bbram 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MODEL_IDX_0 "stm32-bbram"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status "disabled"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible {"st,stm32-bbram"}
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0 "st,stm32-bbram"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-bbram
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_TOKEN st_stm32_bbram
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_BBRAM
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_st_backup_regs 5
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_st_backup_regs_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000000_FOREACH_NODELABEL(fn) fn(timers2)
#define DT_N_S_soc_S_timers_40000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 64
#define DT_N_S_soc_S_timers_40000000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	65, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id 1408
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 65
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	64, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000400_FOREACH_NODELABEL(fn) fn(timers3)
#define DT_N_S_soc_S_timers_40000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 66
#define DT_N_S_soc_S_timers_40000400_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	67, /* /soc/timers@40000400/counter */ \
	68, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 60
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id 1409
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PATH "/soc/timers@40000400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD 67
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REQUIRES_ORDS \
	66, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40000400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 68
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	66, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000
 *
 * Binding (compatible = st,stm32-timers):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_PATH "/soc/timers@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_FULL_NAME "timers@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40002000_FOREACH_NODELABEL(fn) fn(timers14)
#define DT_N_S_soc_S_timers_40002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers14, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40002000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm) fn(DT_N_S_soc_S_timers_40002000_S_counter)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000_S_counter)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_ORD 69
#define DT_N_S_soc_S_timers_40002000_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_SUPPORTS_ORDS \
	70, /* /soc/timers@40002000/counter */ \
	71, /* /soc/timers@40002000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40002000
#define DT_N_NODELABEL_timers14     DT_N_S_soc_S_timers_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_REG_NUM 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40002000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, status, 0)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, status, 0)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg {1073750016 /* 0x40002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, clocks, 0)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, clocks, 0)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_VAL_id 1551
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, resets, 0)
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, resets, 0)
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40002000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40002000_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PATH "/soc/timers@40002000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PARENT DT_N_S_soc_S_timers_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40002000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_counter_ORD 70
#define DT_N_S_soc_S_timers_40002000_S_counter_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_counter_REQUIRES_ORDS \
	69, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40002000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40002000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PATH "/soc/timers@40002000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PARENT DT_N_S_soc_S_timers_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_ORD 71
#define DT_N_S_soc_S_timers_40002000_S_pwm_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REQUIRES_ORDS \
	69, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40002000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_PATH "/soc/timers@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME "timers@40012c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40012c00_FOREACH_NODELABEL(fn) fn(timers1)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40012c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40012c00_S_counter)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00_S_counter)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_ORD 72
#define DT_N_S_soc_S_timers_40012c00_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_SUPPORTS_ORDS \
	73, /* /soc/timers@40012c00/counter */ \
	74, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 2
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 14
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_up_trg_com_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_up_trg_com_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_up_trg_com_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_up_trg_com_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_up_trg_com_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 14
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk_up_trg_com", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk_up_trg_com"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UNQUOTED brk_up_trg_com
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_TOKEN brk_up_trg_com
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK_UP_TRG_COM
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id 1547
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_PATH "/soc/timers@40012c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_ORD 73
#define DT_N_S_soc_S_timers_40012c00_S_counter_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_REQUIRES_ORDS \
	72, /* /soc/timers@40012c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40012c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40012c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PATH "/soc/timers@40012c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD 74
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REQUIRES_ORDS \
	72, /* /soc/timers@40012c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014400_FOREACH_NODELABEL(fn) fn(timers16)
#define DT_N_S_soc_S_timers_40014400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers16, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 75
#define DT_N_S_soc_S_timers_40014400_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	76, /* /soc/timers@40014400/counter */ \
	77, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {21 /* 0x15 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id 1553
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 76
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	75, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 77
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	75, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014800_FOREACH_NODELABEL(fn) fn(timers17)
#define DT_N_S_soc_S_timers_40014800_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers17, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 78
#define DT_N_S_soc_S_timers_40014800_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/rcc@40021000/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	79, /* /soc/timers@40014800/counter */ \
	80, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17     DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40021000_S_reset_controller
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id 1554
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 79
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	78, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   /home/milho/Repos/zephyr/zephyr/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 80
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	78, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40022000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_40021800) fn(DT_N_S_soc_S_pin_controller_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40012c00_S_counter) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter) fn(DT_N_S_soc_S_timers_40002000) fn(DT_N_S_soc_S_timers_40002000_S_pwm) fn(DT_N_S_soc_S_timers_40002000_S_counter) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_adc_40012400) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dmamux_40020800) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_mutex0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_40021800) fn(DT_N_S_soc_S_pin_controller_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_mutex0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012400, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dmamux_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_mutex0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_scl_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c1_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_i2c2_sda_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_mutex0, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32g031k8_nucleo 1
#define DT_COMPAT_HAS_OKAY_st_stm32g031 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v6m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv6m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_st_stm32f0_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc_rctl 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m0_ 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_hsi_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_pll_clock 1
#define DT_COMPAT_HAS_OKAY_arduino_nano_header_r3 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_mutex_gpio 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32g031k8_nucleo_NUM_OKAY 1
#define DT_N_INST_st_stm32g031_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v6m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv6m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_st_stm32f0_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_rctl_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 5
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 1
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 2
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m0__NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_hsi_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_pll_clock_NUM_OKAY 1
#define DT_N_INST_arduino_nano_header_r3_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_mutex_gpio_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32g031k8_nucleo(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32g031k8_nucleo(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g031k8_nucleo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g031k8_nucleo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g031(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32g031(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g031(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g031(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v6m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v6m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v6m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v6m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv6m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv6m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv6m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv6m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f0_rcc(fn) fn(DT_N_S_soc_S_rcc_40021000)
#define DT_FOREACH_OKAY_VARGS_st_stm32f0_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f0_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f0_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc_rctl(fn) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc_rctl(fn, ...) fn(DT_N_S_soc_S_rcc_40021000_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40021800)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40021800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40021800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_50000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_50000000_S_gpio_50001400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m0_(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m0_(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m0_(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m0_(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_hsi_clock(fn) fn(DT_N_S_clocks_S_clk_hsi)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_hsi_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_hsi_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_hsi_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_nano_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_nano_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_nano_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_nano_header_r3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mutex_gpio(fn) fn(DT_N_S_mutex0)
#define DT_FOREACH_OKAY_VARGS_mutex_gpio(fn, ...) fn(DT_N_S_mutex0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mutex_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mutex_gpio(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
